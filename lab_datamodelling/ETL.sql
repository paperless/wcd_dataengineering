USE WAREHOUSE WCD_WH1_DIANA;
USE WCD_LAB;

-- create fact table:

CREATE TABLE IF NOT EXISTS ANALYSIS.RENTALS
( STORE_ID NUMBER(38,0),
ADDRESS_ID NUMBER(38,0),
RENTAL_DATE DATE,
STAFF_ID NUMBER(38,0),
FILM_ID NUMBER(38,0),
CUSTOMER_ID NUMBER(38,0),
TOTAL_AMOUNT NUMBER(38,0),
NUMBER_RENTALS NUMBER(38,0)
);

-- create a transient table for staging
CREATE SCHEMA IF NOT EXISTS STAGING;
--DROP TABLE IF EXISTS STAGING.RENTALS_BASE;
CREATE TRANSIENT TABLE IF NOT EXISTS STAGING.RENTALS_BASE
(STORE_ID NUMBER(38,0),
ADDRESS_ID NUMBER(38,0),
RENTAL_DATE DATE,
STAFF_ID NUMBER(38,0),
RENTAL_ID NUMBER(38,0),
CUSTOMER_ID NUMBER(38,0),
TOTAL_AMOUNT NUMBER(38,0),
NUMBER_RENTALS NUMBER(38,0)
);

TRUNCATE TABLE STAGING.RENTALS_BASE;
INSERT INTO STAGING.RENTALS_BASE
--(STORE_ID, ADDRESS_ID, RENTAL_DATE, STAFF_ID, CUSTOMER_ID, TOTAL_AMOUNT, NUMBER_RENTALS)
SELECT 
S.STORE_ID ,
S.ADDRESS_ID ,
R.RENTAL_DATE,
R.STAFF_ID,
R.RENTAL_ID ,
C.CUSTOMER_ID ,
SUM(P.AMOUNT) AS TOTAL_AMOUNT ,
COUNT(DISTINCT R.RENTAL_ID) AS NUMBER_RENTALS 
FROM WCD_LAB.SAKILA.STORE S 
	JOIN WCD_LAB.SAKILA.CUSTOMER C ON S.STORE_ID = C.STORE_ID 
	JOIN WCD_LAB.SAKILA.RENTAL R ON C.CUSTOMER_ID = R.CUSTOMER_ID 
	JOIN WCD_LAB.SAKILA.PAYMENT P ON R.RENTAL_ID = P.RENTAL_ID 
GROUP BY S.STORE_ID ,
S.ADDRESS_ID ,
R.RENTAL_DATE,
R.STAFF_ID,
R.RENTAL_ID ,
C.CUSTOMER_ID ;


-- create dimension tables
-- date dim :
--ALTER TABLE WCD_LAB.ANALYSIS.DATES RENAME TO WCD_LAB.ANALYSIS.DATES_DIM
--CREATE TABLE ANALYSIS.DATES
--(
--	`DATE` DATE,
--	`MONTH` INT, 
--	`DAY` INT,
--	`WEEKNUM` INT,
--	`MONTH_NAME` VARCHAR(12),
--	`YEAR` INT
--)

TRUNCATE TABLE WCD_LAB.ANALYSIS.DATES_DIM ;
INSERT INTO WCD_LAB.ANALYSIS.DATES_DIM 
SELECT 
	RENTAL_DATE ,
	MONTH(RENTAL_DATE) ,
	DAY(RENTAL_DATE),
	WEEK(RENTAL_DATE) ,
	MONTHNAME(RENTAL_DATE) ,
	YEAR(RENTAL_DATE)	
FROM WCD_LAB.SAKILA.RENTAL
GROUP BY RENTAL_DATE
ORDER BY RENTAL_DATE;

-- create Customer_dim:

CREATE TABLE IF NOT EXISTS ANALYSIS.CUSTOMER_DIM
(CUSTOMER_ID NUMBER(38,0),
FIRST_NAME  VARCHAR(45),
LAST_NAME VARCHAR(45)
);

TRUNCATE TABLE ANALYSIS.CUSTOMER_DIM;
INSERT INTO ANALYSIS.CUSTOMER_DIM
SELECT 
CUSTOMER_ID,
FIRST_NAME,
LAST_NAME
FROM WCD_LAB.SAKILA.CUSTOMER;

-- create FILMS_DIM :
CREATE TABLE IF NOT EXISTS ANALYSIS.FILMS_DIM
(FILM_ID NUMBER(38,0), 
TITLE VARCHAR(500)
);

TRUNCATE TABLE ANALYSIS.FILMS_DIM;
INSERT INTO ANALYSIS.FILMS_DIM
SELECT 
FILM_ID,
TITLE
FROM WCD_LAB.SAKILA.FILM;

-- create STORE_DIM:

CREATE TABLE IF NOT EXISTS ANALYSIS.STORE
(STORE_ID NUMBER(38,0),
ADDRESS varchar(50),
CITY varchar(50)
);
--ALTER TABLE  WCD_LAB.ANALYSIS.STORE RENAME TO WCD_LAB.ANALYSIS.STORE_DIM

TRUNCATE TABLE WCD_LAB.ANALYSIS.STORE_DIM;
INSERT INTO WCD_LAB.ANALYSIS.STORE_DIM
SELECT 
S.STORE_ID ,
A.ADDRESS ,
C.CITY 
FROM WCD_LAB.SAKILA.STORE S 
	JOIN WCD_LAB.SAKILA.ADDRESS A ON S.ADDRESS_ID = A.ADDRESS_ID 
	JOIN WCD_LAB.SAKILA.CITY C ON A.CITY_ID = C.CITY_ID ;

-- create staff dim:
CREATE TABLE IF NOT EXISTS WCD_LAB.ANALYSIS.STAFF_DIM
( STAFF_ID NUMBER(38,0),
FIRST_NAME VARCHAR(45),
LAST_NAME VARCHAR(45)
);

TRUNCATE TABLE WCD_LAB.ANALYSIS.STAFF_DIM;
INSERT INTO WCD_LAB.ANALYSIS.STAFF_DIM
SELECT 
STAFF_ID,
FIRST_NAME,
LAST_NAME
FROM WCD_LAB.SAKILA.STAFF;

-- create staging table to match each rental to a film id

--DROP TABLE IF EXISTS STAGING.RENTAL_FILMS;
CREATE TRANSIENT TABLE IF NOT EXISTS STAGING.RENTAL_FILMS
(RENTAL_ID NUMBER(38,0),
FILM_ID NUMBER(38,0)
);

TRUNCATE TABLE STAGING.RENTAL_FILMS;
INSERT INTO STAGING.RENTAL_FILMS
SELECT 
R.RENTAL_ID  
, F.FILM_ID
FROM WCD_LAB.SAKILA.RENTAL R 
	JOIN WCD_LAB.SAKILA.INVENTORY I ON R.INVENTORY_ID = I.INVENTORY_ID 
	JOIN WCD_LAB.SAKILA.FILM F ON I.FILM_ID = F.FILM_ID ;

-- join RENTAL_FILMS  to Rental_base into main fact table WCD_LAB.ANALYSIS.RENTALS:

TRUNCATE TABLE WCD_LAB.ANALYSIS.RENTALS;
INSERT INTO WCD_LAB.ANALYSIS.RENTALS
SELECT 
B.STORE_ID,
B.ADDRESS_ID,
B.RENTAL_DATE,
B.STAFF_ID,
F.FILM_ID ,
B.CUSTOMER_ID,
B.TOTAL_AMOUNT,
B.NUMBER_RENTALS
FROM WCD_LAB.STAGING.RENTALS_BASE B
	JOIN WCD_LAB.STAGING.RENTAL_FILMS F ON B.RENTAL_ID = f.RENTAL_ID ;

